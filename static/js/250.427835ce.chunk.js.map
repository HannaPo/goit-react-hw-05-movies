{"version":3,"file":"static/js/250.427835ce.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,EAAAA,EAAH,oIAQJC,EAAOD,EAAAA,EAAAA,EAAH,mI,SC4BjB,EAjCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBL,GAChBM,MAAK,SAAAC,GACJR,EAAWQ,EACZ,IACAC,OAAM,SAAAN,GACLC,EAASD,EAAMO,QAChB,GACJ,GAAE,CAACT,KAGF,2BACGE,IAAS,gDACW,KAAb,OAAPJ,QAAO,IAAPA,OAAA,EAAAA,EAASY,UAAgB,+DACzBZ,IACC,wBACGA,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,UAACpB,EAAD,sBAAemB,MACf,SAACjB,EAAD,UAAOkB,MAFAF,EADE,QAUtB,C,+LClCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,OAAQ,MACRC,SAAU,QACVC,eAAe,IAGJC,EAAW,mCAAG,sGACFP,EAAAA,EAAAA,IAAA,8BAAiCC,IAD/B,uBACjBT,EADiB,EACjBA,KADiB,kBAGlBA,EAAKgB,SAHa,2CAAH,qDAMXC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAAAA,EAAAA,IAAA,wBACJC,EADI,kBACkBS,IAFf,uBAClBlB,EADkB,EAClBA,KADkB,kBAKnBA,EAAKgB,SALc,2CAAH,sDAQZG,EAAkB,mCAAG,WAAO1B,GAAP,yFACTe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,YAA+BgB,IADtB,uBACxBT,EADwB,EACxBA,KADwB,kBAGzBA,GAHyB,2CAAH,sDAMlBoB,EAAe,mCAAG,WAAO3B,GAAP,yFACNe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAuCgB,IADjC,uBACrBT,EADqB,EACrBA,KADqB,kBAGtBA,EAAKqB,MAHiB,2CAAH,sDAMfvB,EAAkB,mCAAG,WAAOL,GAAP,yFACTe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAuCgB,IAD9B,uBACxBT,EADwB,EACxBA,KADwB,kBAGzBA,EAAKgB,SAHoB,2CAAH,qD","sources":["components/Reviews/Rewiews.styled.jsx","components/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Info = styled.p`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 16px;\n  line-height: 1.25;\n  font-weight: 500;\n  `;\n\nexport const Text = styled.p`\n font-style: italic;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  font-size: 12px;\n  line-height: 1.25;\n`;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from '../../services/movieApi';\nimport {  Info, Text } from './Rewiews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchMoviesReviews(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <p>There are no reviews</p>}\n      {reviews?.length === 0 && <p>No reviews available for this movie</p>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Info>Author: {author}</Info>\n              <Text>{content}</Text>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'a20661da71bad761bc63fca9b3028f72',\n  method: 'GET',\n  language: 'en-US',\n  include_adult: false,\n });\n\nexport const fetchTrends = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${searchParams}`);\n\n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${query}`\n  );\n\n  return data.results;\n};\n\nexport const fetchMoviesDetails = async (movieId) => {\n  const { data } = await axios.get(`/movie/${movieId}?${searchParams}`);\n\n  return data;\n};\n\nexport const fetchMoviesCast = async (movieId) => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n\n  return data.cast;\n};\n\nexport const fetchMoviesReviews = async (movieId) => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n\n  return data.results;\n};\n"],"names":["Info","styled","Text","useState","reviews","setReviews","movieId","useParams","error","setError","useEffect","fetchMoviesReviews","then","data","catch","message","length","map","id","author","content","axios","searchParams","URLSearchParams","api_key","method","language","include_adult","fetchTrends","results","searchMovies","query","fetchMoviesDetails","fetchMoviesCast","cast"],"sourceRoot":""}